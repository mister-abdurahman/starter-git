COMMAND LINE INTERFACE
3 Main directories exist on a computer: home, user and root directory

dir (directory) => to display the content a folder
cd (change directory) => to move up/down folder level
cls => clear interface
mkdir (make directory) => craete directory (folder) [command: mkdir {folder-name}]
rmdir (delete directory) => delete a directory (folder) [command: rmdir {folder-name}]
echo => create file with content [command: echo {content} > {file-name}]
type => to see the content inside a file [command: type {file-name}]
del => delete file [command: del {file-name}]

absolute path is more used in development

GIT
commit => code snap shots
branch => where commits are stored

NB:
Each commit in git has a unique id to identify each commit

git init => initialize a repo
git status => see information about current git project
git add <file-name> => add file present in directory to the "staging area"
git add . => add all untracked files and unsaved files to "staging area"
[staging area is the area btw our working area and the commit we want to make]
git commit -m "commit message" => to commit our project 
// git config --global --edit => to edit git user detail
git log => gives an overview of all commits inside our current branch
<<<<<<< HEAD
git branch => to see current git branch
git branch -m {new-name} => to change current branch name
git checkout {specified-branch} => to switch from curren tbranch to a specified branch
git checkout -b {new-branch-name} => to switch from curent branch to a newly created one "-b".
git merge {specified-branch} => to merge current branch to specified branch/es
=======

Now, this is a conflict !
>>>>>>> feature
